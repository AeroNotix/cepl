format
    Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT, GL_STENCIL_INDEX, or GL_DEPTH_STENCIL, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED, GL_GREEN, GL_BLUE, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER, GL_GREEN_INTEGER, GL_BLUE_INTEGER, GL_RG_INTEGER, GL_RGB_INTEGER, GL_BGR_INTEGER, GL_RGBA_INTEGER, and GL_BGRA_INTEGER.

Adding "_INTEGER" to any of the color formats represent transferring data to/from integral image formats. This turns off the floating-point conversion for integer values.

:rg :rgb :rgba :rgba_integer :rgb_integer :rg_integer
:red :red_integer 
:green :green_integer
:bgr :bgra :bgra_integer :bgr_integer :blue :blue_integer 
:depth_component :depth_stencil :stencil_index

:r :g :b
:rg :rgb :rgba
:bgr :bgra 
:depth :depth-stencil :stencil

type
    Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.

:ubyte		1-byte     8
:byte		1-byte     8
:ushort		2-bytes    16
:short		2-bytes    16
:uint		4-bytes    32
:int		4-bytes    32
:float		4-bytes    32
:ubyte_3_3_2           8        
:ushort_5_6_5          16
:ushort_4_4_4_4        16       :ushort
:ushort_5_5_5_1        16
:uint_8_8_8_8          32       :uint
:uint_10_10_10_2       32

:ubyte_2_3_3_rev
:ushort_5_6_5_rev
:ushort_4_4_4_4_rev     
:ushort_1_5_5_5_rev
:uint_8_8_8_8_rev
:uint_2_10_10_10_rev
